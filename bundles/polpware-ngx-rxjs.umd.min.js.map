{"version":3,"sources":["ng://@polpware/ngx-rxjs/lib/utils/ObservableExtensions.ts"],"names":["item","Promise","resolve","reject","subscription","subscribe","elem","setTimeout","unsubscribe","error","console","log"],"mappings":"wRAE6BA,GACzB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAeJ,EAAKK,WAAU,SAAAC,GAIhCC,YAAW,WACPH,GAAgBA,EAAaI,iBAE7BF,EACAJ,EAAQI,GAERH,EAAO,SAEZ,SAAAM,GACCF,YAAW,WACPH,GAAgBA,EAAaI,iBAEjCL,EAAOM,MAGNL,GACDM,QAAQC,IAAI","sourcesContent":["import { Observable } from 'rxjs';\n\nexport function toPromise<T>(item: Observable<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n        const subscription = item.subscribe(elem => {\n            // We cannot access subscription this early,\n            // at the initialization stage.\n            // Therefore, we schedule to unsubscribe this subscription.\n            setTimeout(() => {\n                subscription && subscription.unsubscribe();\n            });\n            if (elem) {\n                resolve(elem);\n            } else {\n                reject(null);\n            }\n        }, error => {\n            setTimeout(() => {\n                subscription && subscription.unsubscribe();\n            });\n            reject(error);\n        });\n\n        if (!subscription) {\n            console.log('Something error');\n        }\n    });\n}\n"]}