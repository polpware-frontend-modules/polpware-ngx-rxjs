{"version":3,"file":"polpware-ngx-rxjs.mjs","sources":["../../../../projects/polpware/ngx-rxjs/src/lib/utils/ObservableExtensions.ts","../../../../projects/polpware/ngx-rxjs/src/public_api.ts","../../../../projects/polpware/ngx-rxjs/src/polpware-ngx-rxjs.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nexport function toPromise<T>(item: Observable<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n        const subscription = item.subscribe(elem => {\n            // We cannot access subscription this early,\n            // at the initialization stage.\n            // Therefore, we schedule to unsubscribe this subscription.\n            setTimeout(() => {\n                subscription && subscription.unsubscribe();\n            });\n            if (elem) {\n                resolve(elem);\n            } else {\n                reject(null);\n            }\n        }, error => {\n            setTimeout(() => {\n                subscription && subscription.unsubscribe();\n            });\n            reject(error);\n        });\n\n        if (!subscription) {\n            console.log('Something error');\n        }\n    });\n}\n","/*\n * Public API Surface of ngx-rxjs\n */\n\nexport * from './lib/utils/ObservableExtensions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"AAEM,SAAU,SAAS,CAAI,IAAmB,EAAA;IAC5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;QACnC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;;;;YAIvC,UAAU,CAAC,MAAK;AACZ,gBAAA,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC;AAC/C,aAAC,CAAC,CAAC;AACH,YAAA,IAAI,IAAI,EAAE;gBACN,OAAO,CAAC,IAAI,CAAC,CAAC;AACjB,aAAA;AAAM,iBAAA;gBACH,MAAM,CAAC,IAAI,CAAC,CAAC;AAChB,aAAA;SACJ,EAAE,KAAK,IAAG;YACP,UAAU,CAAC,MAAK;AACZ,gBAAA,YAAY,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC;AAC/C,aAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,CAAC;AAClB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE;AACf,YAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAClC,SAAA;AACL,KAAC,CAAC,CAAC;AACP;;AC3BA;;AAEG;;ACFH;;AAEG;;;;"}